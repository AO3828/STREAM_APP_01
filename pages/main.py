# Set up and run this Streamlit App
import streamlit as st
import os
from helper_functions import llm # <--- This is the helper function that we have created ðŸ†•
from helper_functions import utility
from logics import customer_query_handler

# region <--------- Streamlit App Configuration --------->
st.set_page_config(
    layout="centered",
    page_title="My Streamlit App"
)


# Do not continue if check_password is not True.  
if not utility.check_password():  
    st.stop()

# endregion <--------- Streamlit App Configuration --------->

st.title("Streamlit App")

form = st.form(key="form")
form.subheader("Prompt")

user_prompt = form.text_area("Enter your prompt here", height=200)

#user_prompt = [{'category': 'Programming and Development','course_name': 'Web Development Bootcamp'},
#                {'category': 'Data Science & AI', 'course_name': 'Data Science with Python'},
#                {'category': 'Data Science & AI', 'course_name': 'AI and Machine Learning for Beginners'}]

#user_prompt = f"""Do you have any coding or data related courses that are under $1000 """


if form.form_submit_button("Submit"):
    st.toast(f"User Input Submitted - {user_prompt}")
#    response = llm.get_completion(user_prompt) # <--- This calls the helper function that we have created ðŸ†•
#    response = customer_query_handler.identify_category_and_courses(user_prompt)
#    response = customer_query_handler.get_course_details(user_prompt) 
#    product_details = customer_query_handler.get_course_details(customer_query_handler.identify_category_and_courses(user_prompt))
#    response = customer_query_handler.generate_response_based_on_course_details(user_prompt,product_details)
    response = customer_query_handler.process_user_message(user_prompt) #<--- This calls the `process_user_message` function that we have created 
    st.write(response) # <--- This displays the response generated by the LLM onto the frontend ðŸ†•
    #print(f"User Input is {user_prompt}")


filelist=[]
for root, dirs, files in os.walk("data"):
      for file in files:
             filename=os.path.join(root, file)
             filelist.append(filename)
st.write(filelist)